name: integration

on:
  pull_request:
    branches:
      - development
      - main

env:
  CI: true
  NG_CLI_ANALYTICS: false
  NODE_OPTIONS: '--max_old_space_size=4096'

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version

      - name: Restore Dependencies
        id: node-modules-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache Dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}

  lint:
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version

      - name: Restore Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Lint Test
        run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version

      - name: Restore Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run Tests
        run: npm run test

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run e2e

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version

      - name: Restore Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Generate Build
        env:
          CURRENT_ENV: ci
        run: npm run build
